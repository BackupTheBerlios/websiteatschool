# crewserver-example.conf -- example configuration file for crewserver.php
# Peter Fokker -- 2013-06-12
#
# This file contains the configuration information for the
# websocket server contained in crewserver.php. The following
# parameters can be configured:
#
# ORIGIN = url, secret, shops, workers
# DEBUG = level
# SERVER_ADDRESS = ip-address
# SERVER_PORT = port-number
# LOG2SYSLOG = flag
# MARK_TIME = interval-in-seconds
# MAX_DELTA = time-window-in-seconds
#
# See below for more information per item.
#
# The format of this file is as follows.
#
# - leading and trailing spaces are not significant
# - empty lines are discarded
# - lines starting with a hash character '#' are comments
# - comment lines are ignored
# - parameters are specified as key=value-pairs
# - keys are caseINsensitive
# - key=value-pairs cannot span lines (i.e. no line continuation with backslash)
#

# ORIGIN
# 
#   Format: ORIGIN = url, secret, shops, workers
#
#   with
#
#   url        origin, e.g. http://www.exemplum.eu
#   secret     plain text password (see below)
#   shops      maximum # of workshops allowed for this origin (default 1)
#   workers    maximum # of concurrent members per workshop (default 4)
#
#   The origin must match the origin as it is presented to the socket server
#   by the user's browser. It is used as part of the authentication of users.
#   This means that you cannot just use any random URL; it must match the URL
#   of your webserver as it is seen by the user's browser.
#
#   The password (indicated with secret above) is the plain text password
#   used for authentication. This password must be shared between the
#   webserver and the socket server and therefore it must --unfortunately--
#   be stored in plain text. Because of the format of the configuration file
#   the password should not contain commas or spaces. If you wish you could
#   substitute the hexadecimal value ('%20' for space, '%2C' for a comma).
#   You could also use a password consisting of only hexadecimal values, e.g.
#   '%53%65%63%72%65%74' for 'Secret'. However, it is important that both
#   the websocket server and the webserver agree on the password.
#
#   The shops parameter indicates the maximum number of workshops that
#   can be used concurrently with this origin. The default value is 1 and
#   the value should be between 1 and 32 inclusive.
#
#   The workers parameter indicates the maximum number of workshop members.
#   This number must lie between 1 and 26.
#
#   Note:
#   If your server can be reached under different names, you should add
#   an entry for every name. However, the workshops will be considered
#   distinct, ie. the workshop http://exemplum.eu/55/workshop5.html is
#   not the same as workshop http://www.exemplum.eu/55/workshop5.html.
#
#   Also note that an origin entry is per server, i.e. if there are two
#   different installations of Website@School on the same server, e.g.
#   http://exemplum.eu/pupils and http://exemplum.eu/teachers, both 
#   installations share a single origin-entry and hence a single password.
#
#   Note: the url in the ORIGIN identifies the webserver, not
#   the socket server.
#
#   The line below has an example entry for http://exemplum.eu. This
#   entry uses the password "SecretExemplumKey", the maximum number
#   of workshops is 3 and the maximum number of workers is 7.
#
#   ORIGIN = http://exemplum.eu, ThisIsTheSharedSecret, 3, 7
#
#   IMPORTANT NOTE!
#   You should select a secret password that is not easy to guess for
#   outsiders, so pick a long password. You only have to configure it
#   once (in both client and server configuration) so there is no need
#   to make this password easy for you to remember, as long as the computer
#   can remember it. You are problably OK when  you simply add a handful
#   of plain words for a total length of say 25 characters, e.g. 
#   "CorrectHorseBatteryStaple" or a quasi-random string like 
#   "aHR0cDovL20ueGtjZC5jb20vOTM2".


# DEBUG
#
#   Format: DEBUG = level
#
#   with
#
#   level      debug level
#
#   The debug level must be a number between 0 and 7.
#   The default level is 6 (LOG_INFO) and the other
#   realistic option is 7 (LOG_DEBUG). If you set this
#   value to a value lower than 3 the server will not
#   log nothing. The recommend value is 6 (LOG_INFO).
#
#   The default value for DEBUG is 6 (LOG_INFO).
#
DEBUG = 6


# SERVER_ADDRESS
#
#   Format: SERVER_ADDRESS = ip-address
#
#   with
#
#   ip-address the IP-address to which the server will be listening.
#
#   This IP-address can be one of the IP-addresses of your server,
#   or the special value 0.0.0.0 indicating that the server must listen
#   on all available interfaces.
#
#   The default value for SERVER_ADDRESS is 0.0.0.0.
#
SERVER_ADDRESS = 0.0.0.0


# SERVER_PORT
#
#    Format SERVER_PORT = port-number
#
#    with
#
#    port-number the number of the port to listen on
#
#    This port-number can be any available portnumber above 1024
#    (if the server will be running under your own user account)
#    or even a port under 1024 if it is running as root.
#
#   The default value for SERVER_PORT is 8008.
#
SERVER_PORT = 8008

# LOG2SYSLOG
#
#   Format: LOG2SYSLOG = flag
#
#   with
#
#   flag indicating whether to log to syslog (flag=1) or stderr (flag-0)
#
#   Default value is 1 (log to syslog).
#
LOG2SYSLOG = 1

# MARK_TIME
#
#   Format: MARK_TIME = interval
#
#   with
#
#   interval the number of seconds between MARK-messages
#
#   This configures the time between logging a MARK=message
#   as an indication of the server still being alive. Also,
#   whenever a MARK-message is output the server checks to
#   see if the configuration file crewserver.conf has changed
#   since the last time the server checked it. If that is the
#   case, the configuration file is re-read and any changed
#   parameters are processed if possible.
#
#   Note: some parameters can not be changed while the server
#   is running, notably SERVER_ADDRESS and SERVER_PORT and
#   LOG2SYSLOG. You can change the values but any changes are
#   discarded when the configuration file is re-read at MARK-time.
#
#   Default value is 900 seconds (15 minutes)
MARK_TIME = 900

# MAX_DELTA
#
#  Format: MAX_DELTA = time-window
#
#  with
#
#  time-window a time interval in seconds
#
#  This parameter is used to limit the validity of authentication
#  of users. Because the time on the webserver and the socket
#  server may differ just a little bit, and because it may take
#  some time for a websocket request reaching the server, the
#  necessary token has to have a certain time during which it
#  is considered valid. After this time has passed, the token
#  is no longer valid. This makes it impossible to trick the
#  socket server using a captured token in a replay-attack.
#
#  The default value for this time window is 120 seconds (2 minutes)
#
MAX_DELTA = 120


# Final note
#
# The server periodically emits a MARK message.
# Whenever this event occurs the server also re-reads this
# configuration file. That implies that eventually the
# changed configuration will reach the server. This means
# that you can add (or delete) origins and that the 
# websocket server will follow.
#
# EOF
